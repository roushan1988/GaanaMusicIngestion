package com.til.prime.timesSubscription.service;

import java.util.List;

import com.til.prime.timesSubscription.dto.external.BackendSubscriptionActivationRequest;
import com.til.prime.timesSubscription.dto.external.BackendSubscriptionRequest;
import com.til.prime.timesSubscription.dto.external.BackendSubscriptionValidationResponse;
import com.til.prime.timesSubscription.dto.external.BlockUnblockRequest;
import com.til.prime.timesSubscription.dto.external.CancelSubscriptionRequest;
import com.til.prime.timesSubscription.dto.external.CheckEligibilityRequest;
import com.til.prime.timesSubscription.dto.external.CheckStatusRequest;
import com.til.prime.timesSubscription.dto.external.CheckValidVariantRequest;
import com.til.prime.timesSubscription.dto.external.CustomerSearchRequest;
import com.til.prime.timesSubscription.dto.external.ExtendExpiryRequest;
import com.til.prime.timesSubscription.dto.external.GenerateOrderRequest;
import com.til.prime.timesSubscription.dto.external.GenericRequest;
import com.til.prime.timesSubscription.dto.external.InitPurchaseRequest;
import com.til.prime.timesSubscription.dto.external.OrderDetailsRequest;
import com.til.prime.timesSubscription.dto.external.OrderSearchRequest;
import com.til.prime.timesSubscription.dto.external.OtpRequest;
import com.til.prime.timesSubscription.dto.external.OtpVerificationRequest;
import com.til.prime.timesSubscription.dto.external.PlanListRequest;
import com.til.prime.timesSubscription.dto.external.PropertyDataRequestCRM;
import com.til.prime.timesSubscription.dto.external.PropertyDataUpdateRequestCRM;
import com.til.prime.timesSubscription.dto.external.PurchaseHistoryRequest;
import com.til.prime.timesSubscription.dto.external.SubmitPurchaseRequest;
import com.til.prime.timesSubscription.dto.external.TurnOffAutoDebitRequest;
import com.til.prime.timesSubscription.dto.external.UpdateCacheForMobileRequest;
import com.til.prime.timesSubscription.dto.external.ValidationResponse;
import com.til.prime.timesSubscription.model.BackendSubscriptionUserModel;
import com.til.prime.timesSubscription.model.SubscriptionVariantModel;
import com.til.prime.timesSubscription.model.UserModel;
import com.til.prime.timesSubscription.model.UserSubscriptionModel;

public interface SubscriptionValidationService {
    ValidationResponse validatePreAllPlans(PlanListRequest request);
    ValidationResponse validatePostAllPlans(UserModel userModel, ValidationResponse validationResponse);
    ValidationResponse validatePreInitPurchasePlan(InitPurchaseRequest request, boolean crmRequest);
    ValidationResponse validatePostInitPurchasePlan(InitPurchaseRequest request, SubscriptionVariantModel variantModel, UserSubscriptionModel restrictedModel, UserSubscriptionModel lastUserSubscription, boolean crmRequest, ValidationResponse validationResponse);
    ValidationResponse validatePreGenerateOrder(GenerateOrderRequest request);
    ValidationResponse validatePostGenerateOrder(GenerateOrderRequest request, SubscriptionVariantModel variantModel, UserSubscriptionModel userSubscriptionModel, UserSubscriptionModel restrictedModel, ValidationResponse validationResponse);
    ValidationResponse validatePreSubmitPurchasePlan(SubmitPurchaseRequest request);
    ValidationResponse validatePostSubmitPurchasePlan(SubmitPurchaseRequest request, UserSubscriptionModel userSubscriptionModel, ValidationResponse validationResponse);
    ValidationResponse validatePurchaseHistory(PurchaseHistoryRequest request);
    ValidationResponse validatePreCancelSubscription(CancelSubscriptionRequest request, boolean serverRequest);
    ValidationResponse validatePostCancelSubscription(CancelSubscriptionRequest request, UserSubscriptionModel userSubscriptionModel, ValidationResponse validationResponse);
    ValidationResponse validatePreTurnOffAutoDebit(TurnOffAutoDebitRequest request);
    ValidationResponse validatePreBlockUnblockUser(BlockUnblockRequest request);
    ValidationResponse validatePostBlockUnblockUser(BlockUnblockRequest request, UserModel userModel, ValidationResponse validationResponse);
    ValidationResponse validatePostTurnOffAutoDebit(TurnOffAutoDebitRequest request, List<UserSubscriptionModel> userSubscriptionModelList, ValidationResponse validationResponse);
    ValidationResponse validatePreExtendExpiry(ExtendExpiryRequest request);
    ValidationResponse validatePostExtendExpiry(ExtendExpiryRequest request, UserSubscriptionModel userSubscriptionModel, UserSubscriptionModel lastUserSubscription, ValidationResponse validationResponse);
    ValidationResponse validatePreCheckEligibility(CheckEligibilityRequest request);
    ValidationResponse validatePostCheckEligibility(CheckEligibilityRequest request, SubscriptionVariantModel variantModel, UserSubscriptionModel lastModel, UserSubscriptionModel restrictedModel, ValidationResponse validationResponse);
    ValidationResponse validatePreValidVariant(CheckValidVariantRequest request);
    ValidationResponse validatePostValidVariant(CheckValidVariantRequest request, SubscriptionVariantModel model, ValidationResponse validationResponse);
    ValidationResponse validatePreCheckStatusViaApp(CheckStatusRequest request);
    ValidationResponse validatePreCheckStatusViaServer(CheckStatusRequest request, boolean external);
    ValidationResponse validatePostCheckStatus(CheckStatusRequest request, UserSubscriptionModel userSubscriptionModel, ValidationResponse validationResponse);
    ValidationResponse validateUser(GenericRequest request, ValidationResponse validationResponse);
    ValidationResponse validateSendOtp(OtpRequest request);
    ValidationResponse validateVerifyOtp(OtpVerificationRequest request);
    ValidationResponse validateCredentials(GenericRequest request, ValidationResponse validationResponse);
    ValidationResponse validateEncryptionForSubmitPurchase(SubmitPurchaseRequest request, ValidationResponse validationResponse);
    ValidationResponse validateEncryptionForOrder(GenerateOrderRequest request, ValidationResponse validationResponse);
    ValidationResponse validateEncryptionForCheckStatus(CheckStatusRequest request, ValidationResponse validationResponse, boolean external);
    ValidationResponse validateEncryptionForValidVariant(CheckValidVariantRequest request, ValidationResponse validationResponse);
    ValidationResponse validateBlockedUser(UserModel userModel, ValidationResponse validationResponse);
    ValidationResponse validatePreUpdateCacheForMobile(UpdateCacheForMobileRequest request);
    ValidationResponse validatePostUpdateCacheForMobile(UserSubscriptionModel userSubscriptionModel, ValidationResponse validationResponse);
    ValidationResponse validatePreCustomerSearchCRM(CustomerSearchRequest request);
    //ValidationResponse validatePostCustomerSearchCRM(UserSubscriptionModel userSubscriptionModel, ValidationResponse validationResponse);
    ValidationResponse validatePreCustomerDetailsCRM(CustomerSearchRequest request);
    ValidationResponse validatePreOrderDetailsCRM(OrderDetailsRequest request);
    ValidationResponse validatePreOrderSearchCRM(OrderSearchRequest request);
    BackendSubscriptionValidationResponse validateBackendSubscriptionRequest(BackendSubscriptionRequest request);
    ValidationResponse validatePreBackendSubscriptionActivation(BackendSubscriptionActivationRequest request);
    ValidationResponse validatePostBackendSubscriptionActivation(BackendSubscriptionActivationRequest request, BackendSubscriptionUserModel backendUser, ValidationResponse validationResponse);
    ValidationResponse validatePreGetCRMProperties(PropertyDataRequestCRM request);
    ValidationResponse validatePreUpdateCRMProperties(PropertyDataUpdateRequestCRM request);
}
